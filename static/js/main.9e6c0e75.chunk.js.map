{"version":3,"sources":["components/timer.js","App.js","index.js"],"names":["TimerWrapper","props","startTimer","bind","state","timeLeft","timer","clearInterval","this","setInterval","setState","time","id","preload","src","className","style","width","React","Component","Button","onClick","handleStartTime","TimerDisplay","document","getElementById","play","App","ReactDOM","render","StrictMode"],"mappings":"mOAMMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAOA,IACFC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,MAAQ,CACXC,SAAU,KACVC,MAAO,MALQ,E,uDAURD,GAAW,IAAD,OACnBE,cAAcC,KAAKJ,MAAME,OAEzB,IAAIA,EAAQG,aAAY,WACtB,IAAIJ,EAAW,EAAKD,MAAMC,SAAU,EACpB,IAAbA,GACFE,cAAcD,GAEf,EAAKI,SAAS,CACZL,SAAUA,MAEX,KACH,OAAOG,KAAKE,SAAS,CAAEL,SAAUA,EAAUC,MAAOA,M,+BAIhD,OACE,6BACE,6BACE,kBAAC,EAAD,CAAQK,KAAK,IAAIT,WAAYM,KAAKN,aAClC,kBAAC,EAAD,CAAQS,KAAK,KAAKT,WAAYM,KAAKN,aACnC,kBAAC,EAAD,CAAQS,KAAK,MAAMT,WAAYM,KAAKN,cAEtC,kBAAC,EAAD,CAAcG,SAAUG,KAAKJ,MAAMC,WACnC,2BAAOO,GAAG,MAAMC,QAAQ,OAAOC,IAAI,6DACnC,yBAAKC,UAAU,aACVC,MAAO,CAAEC,MAAM,GAAD,OAAKT,KAAKJ,MAAMC,SAAhB,a,GAtCFa,IAAMC,WA+CvBC,E,gLAED,OAAOZ,KAAKP,MAAMC,WAAWM,KAAKP,MAAMU,Q,+BAG3C,OAAO,4BAAQU,QAASb,KAAKc,gBAAgBnB,KAAKK,OAC/CA,KAAKP,MAAMU,KADP,iB,GALYO,IAAMC,WAYzBI,E,uKAKF,OAH4B,IAAxBf,KAAKP,MAAMI,UACbmB,SAASC,eAAe,OAAOC,OAEL,IAAxBlB,KAAKP,MAAMI,UAA0C,OAAxBG,KAAKP,MAAMI,SACnC,8BAGJ,sCAAYG,KAAKP,MAAMI,SAAvB,a,GATkBa,IAAMC,WAednB,I,MCnEJ2B,MARf,WACE,OACE,yBAAKZ,UAAU,aACZ,kBAAC,EAAD,QCFPa,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFN,SAASC,eAAe,U","file":"static/js/main.9e6c0e75.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport \"../App\"\r\n\r\n\r\n\r\nclass TimerWrapper extends React.Component{\r\n\r\n  constructor(props) {\r\n    super (props)\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.state = {\r\n      timeLeft: null,\r\n      timer: null,\r\n     \r\n    }\r\n  }\r\n\r\n  startTimer(timeLeft) {\r\n    clearInterval(this.state.timer)\r\n    \r\n    let timer = setInterval(()=>{\r\n      var timeLeft = this.state.timeLeft -1\r\n      if(timeLeft === 0) {\r\n       clearInterval(timer) \r\n      }\r\n      this.setState({\r\n        timeLeft: timeLeft\r\n      }) \r\n    }, 1000)\r\n    return this.setState({ timeLeft: timeLeft, timer: timer})\r\n  }\r\n\r\n    render () {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Button time=\"5\" startTimer={this.startTimer}/>\r\n            <Button time=\"30\" startTimer={this.startTimer}/>\r\n            <Button time=\"100\" startTimer={this.startTimer}/>\r\n          </div>\r\n          <TimerDisplay timeLeft={this.state.timeLeft}/>\r\n          <audio id=\"end\" preload=\"auto\" src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\" ></audio>\r\n          <div className=\"timer-line\"\r\n               style={{ width: `${this.state.timeLeft}%`}}>   \r\n          </div>\r\n        </div>\r\n        )\r\n        \r\n      }\r\n\r\n    }\r\n    \r\n    class Button extends React.Component{\r\n      handleStartTime () {\r\n         return this.props.startTimer(this.props.time)\r\n      }\r\n      render () {\r\n      return <button onClick={this.handleStartTime.bind(this)}>\r\n        {this.props.time}  seconds</button>\r\n      }   \r\n     }\r\n\r\n\r\n     \r\nclass TimerDisplay extends React.Component{\r\n  render() {\r\n    if (this.props.timeLeft === 0) {\r\n      document.getElementById(\"end\").play()\r\n    }\r\n    if (this.props.timeLeft === 0 || this.props.timeLeft === null ) {\r\n      return <div></div>\r\n\r\n    }\r\n  return <h1>Time : {this.props.timeLeft} sec </h1>\r\n  }\r\n    \r\n}\r\n    \r\n   \r\n    export default TimerWrapper; \r\n    \r\n  ","import React from 'react';\nimport Component from './components/timer';\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n       <Component />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/timer.js","App.js","index.js"],"names":["TimerWrapper","useState","time","setTime","isActive","setIsActive","reset","document","getElementById","play","useEffect","interval","setInterval","clearInterval","className","onClick","id","preload","src","style","width","App","ReactDOM","render","StrictMode"],"mappings":"sOAqDeA,EAhDM,WAAO,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAESF,oBAAS,GAFlB,mBAEhBG,EAFgB,KAENC,EAFM,KAQhBC,EAAQ,WACRH,EAAQ,IACRE,GAAY,GACjBE,SAASC,eAAe,OAAOC,QAoBjC,OAlBAC,qBAAU,WACN,IAAIC,EAcJ,OAbIP,EACAO,EAAWC,aAAY,WACfV,EAAO,EACPC,EAAQD,EAAM,GAGdI,MAEL,KAEHO,cAAcF,GAGX,kBAAME,cAAcF,MACxB,CAACP,EAAUF,IAGd,6BACI,yBAAKY,UAAU,SACX,0BAAMA,UAAU,QAAQZ,IAE5B,yBAAKY,UAAU,QACX,4BAAQC,QAjCF,WACdV,GAAaD,KAgCwBA,EAAW,QAAU,SAClD,4BAAQW,QAAST,GAAjB,UAEN,2BAAOU,GAAG,MAAMC,QAAQ,OAAOC,IAAI,6DACjC,yBAAKJ,UAAU,aAAaK,MAAO,CAACC,MAAM,QAAD,OAAUlB,EAAV,sBAA4BD,mBAAS,IAArC,W,MCjCtCoB,MARf,WACE,OACE,yBAAKP,UAAU,aACZ,kBAAC,EAAD,QCFPQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASC,eAAe,W","file":"static/js/main.1f159420.chunk.js","sourcesContent":["import React,{ useState, useEffect } from \"react\";\r\n\r\nimport \"../App\"\r\n\r\n\r\nconst TimerWrapper = () => {\r\n    const [time, setTime] = useState(10);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const  startTime =() =>{\r\n        setIsActive(!isActive);\r\n    }\r\n\r\n    const  reset = () => {\r\n        if(setTime(10),\r\n           setIsActive(false)); \r\n     {document.getElementById(\"end\").play()}             \r\n}\r\n    useEffect(() => {\r\n        let interval; \r\n        if (isActive) {\r\n            interval = setInterval(() => {\r\n                if (time > 0 ) {\r\n                    setTime(time -1 ) \r\n                  \r\n                } else {\r\n                    reset()\r\n                }\r\n            }, 1000);\r\n        } else  {\r\n            clearInterval(interval);\r\n        }    \r\n       \r\n        return () => clearInterval(interval);\r\n        }, [isActive, time]);      \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"timer\">\r\n                <span className=\"blok\">{time}</span>\r\n            </div>\r\n            <div className=\"butt\">\r\n                <button onClick={startTime}>{isActive ? 'Pause' : 'Start'}</button>\r\n                <button onClick={reset}>Reset</button>\r\n            </div>\r\n          <audio id=\"end\" preload=\"auto\" src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\" ></audio>\r\n            <div className=\"timer-line\" style={{width: `calc(${time} * (100% / ${useState(10)}))`}}></div>\r\n        </div>\r\n        \r\n    );\r\n}; \r\n\r\n\r\nexport default TimerWrapper; ","import React from 'react';\nimport Component from './components/timer';\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n       <Component />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}